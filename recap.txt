----------------------------------변수와 자료형 -----------------------------------
자바스크립트의 변수는 전부 다 참조변수를 활용한 객체다.
var a = 4 는

var a = new Number(4) 와 같다. 자동 wrapper 기능이 내장되어 있고
number 클래스의 메서드를 사용 할 수 있다.
이러한 wrapper 클래스의 종류는 부울형, 숫자형, 문자형 세가지가 있다.

---------------------------------배열객체와 메서드 --------------------------------

자바스크립트는 배열을 stack 방식으로 사용할 수 있다.
메서드 별로 기능이 다 있다.

push 메서드와 pop 메서드만을 이용해야 한다.

물론 이 배열객체에는 list의 기능도 있다.
충격스럽게도 배열객체를 처음 생성하고 인덱스를 0보다 큰 인덱스에 대입을 하면
그 인덱스보다 적은 인덱스를 모조리 생성하고
빈 객체를 참조해버린다.

충격적이게도 배열의 안에는 다른 자료형을 넣을 수도 있고 배열이 중첩 될 수도 있다.

list의 splice 라는 메서드가 있다. 이는 특정 인덱스 이후의 데이터를 조작하는 메서드다.

array.splice(2,1) >>>> 이것은 2번째 인덱스 부터 첫번째 데이터를 삭제하지만

array.splice(2,1,"hau") >> 이것은 삭제한 뒤에 3번째 인자를 대입한다.

array.splice(2,0,"hau") >> 심지어 이것은 삭제하지 않고 그 자리에 3번째 인자를 삽입한다.


--------------------------------object 정의----------------------------------------

제일 이질적인 것 같다. 기존의 언어는 class 파일을 생성한뒤 그 파일에 정의된 것을 바탕으로
객체를 생성했다. 하지만 자바스크립트는 하나의 파일에서 객체를 맨땅에 생성하고 사용한다(.....)

var exam = new Object() >> 맨땅에 객체 초기화
exam.kor = 30 >>>>> 느닷없이 객체에 값 집어넣기....이것을 동적인 방식이라고 한다고 한다.(expand object)

자바스크립트는 map 자료형을 오브젝트가 제공한다.
즉 key 값에 의한 value 를 가져 올 수가 있다.

var exam = new Object();
exam["kor"] = 30; >> key 값 kor에 30이라는 value가 들어있음.

alert(exam["kor"]) >> 30 출력됨.

-----------------------------JSON----------------------------------------------

json 은 javascript object notation 의 약자이다.
그냥 우리가 쌩 new 연산자와 생성자를 이용해서 생성하는 것들을
그게 아니라 보기 편하게 표기하도록 하는 방식이다.

내부적인 처리가 어떻게 되는지 안보여주고 겉모습만 이쁘게 보여주는 것이다.
컨트롤 k + c >>> 범위주석 히히

json 표기로 넘어오면서 이 표기법이 적당히 가볍고 적당히 무거운 데이터를 표현할 수가 있다는 것을 알게되자
이 방식을 이용해서 데이터를 저장하고 받는 방식이 매우 유행하게 되었다.
